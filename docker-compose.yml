services:
  # 🐘 Servicio de Base de Datos PostgreSQL
  db:
    image: postgres:15
    container_name: devhub_postgres
    restart: always
    environment:
      POSTGRES_USER: devhub
      POSTGRES_PASSWORD: devhubpass
      POSTGRES_DB: devhub_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devhub_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devhub"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ⚙️ Backend NestJS + Prisma
  backend:
    build: ./backend
    container_name: devhub_api
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://devhub:devhubpass@db:5432/devhub_db
      JWT_SECRET: supersecretkey
      PORT: 3000
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
      echo '⏳ Esperando a que PostgreSQL esté disponible...';
      until pg_isready -h db -p 5432 -U devhub; do
        echo '📡 Aún sin conexión con la base de datos...';
        sleep 2;
      done;
      echo '✅ Base de datos lista, iniciando NestJS...';
      yarn start:prod
      "
    networks:
      - devhub_net

  frontend:
    build: ./frontend
    container_name: devhub_frontend
    restart: always
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3000 # 👈 para llamadas al backend
    depends_on:
      - backend
    networks:
      - devhub_net

volumes:
  postgres_data:

networks:
  devhub_net:
    driver: bridge